package utils;
import org.junit.Test;

public class InputParametersPatternTest extends BaseTest
{

    @Test
    public void testGetPattern()
    {
        assert (InputParametersPattern.REPORT_FOLDER_PATH.getPattern().equals("-report|-r"));
        assert (InputParametersPattern.SOURCE_CODE_PATH.getPattern().equals("-source|-s"));
        assert (InputParametersPattern.VULNERABILITIES_LIST.getPattern().equals("-vulnerabilities|-v"));
    }

    @Test
    public void testGetPatternByValue()
    {
        InputParametersPattern.getPatternByValue("-s");
        InputParametersPattern.getPatternByValue("-source");
        InputParametersPattern.getPatternByValue("-r");
        InputParametersPattern.getPatternByValue("-report");
        InputParametersPattern.getPatternByValue("-v");
        InputParametersPattern.getPatternByValue("-vulnerabilities");
    }

    @Test
    public void testGetPatternByValueWithException()
    {
        exceptionRule.expect(IllegalArgumentException.class);
        exceptionRule.expectMessage("Parameter -test is not supported");
        InputParametersPattern.getPatternByValue("-test");
    }

    @Test
    public void testCheckValidatePatternPositive()
    {
        assert (InputParametersPattern.checkValidatePattern("-s"));
        assert (InputParametersPattern.checkValidatePattern("-source"));
        assert (InputParametersPattern.checkValidatePattern("-r"));
        assert (InputParametersPattern.checkValidatePattern("-report"));
        assert (InputParametersPattern.checkValidatePattern("-v"));
        assert (InputParametersPattern.checkValidatePattern("-vulnerabilities"));
    }

    @Test
    public void testCheckValidatePatternNegative()
    {
        assert (!InputParametersPattern.checkValidatePattern("-result"));
    }
}