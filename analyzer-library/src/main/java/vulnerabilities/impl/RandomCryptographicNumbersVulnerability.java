package vulnerabilities.impl;

import report.ReportInformation;
import vulnerabilities.Vulnerability;
import vulnerabilities.rule.Rule;

import java.util.List;

//Gafar
public class RandomCryptographicNumbersVulnerability extends Vulnerability {

    private final List<Rule> validationRules;

    public RandomCryptographicNumbersVulnerability() {
        validationRules = initializeRules(this);
    }

    public List<Rule> getValidationRules() {
        return validationRules;
    }

    @Override
    public List<ReportInformation> checkRules(List<String> sourceCode) {
        return null;
    }

    public void createRules() {
        Rule seedRule = new Rule("Seed using", ".*(\\.seed){1}.*(time){1}.*"
                , "Possible incompatibility of operating systems"
                , "Better use std::random_device as seed");
    }
//        std::mt19937 engine; // mt19937 как один из вариантов
//        engine.seed(std::time(nullptr));
//        /*
//        на случай, если у вас UNIX-чё-то или компилятор не MinGW
//        std::random_device device;
//        engine.seed(device());
}
