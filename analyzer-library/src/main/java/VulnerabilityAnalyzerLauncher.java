import vulnerabilities.Vulnerability;
import vulnerabilities.VulnerabilityFactory;

import java.util.ArrayList;
import java.util.List;

public class VulnerabilityAnalyzerLauncher {

    private final List<String> activeVulnerability;
    private final String pathToReportFile;
    private final String pathToReportFolder;

    public VulnerabilityAnalyzerLauncher(List<String> activeAbstractVulnerability
            , String pathToReportFile, String pathToReportFolder) {
        this.activeVulnerability = activeAbstractVulnerability;
        this.pathToReportFile = pathToReportFile;
        this.pathToReportFolder = pathToReportFolder;
    }

    public void launchAnalysis() {
        VulnerabilityFactory factory = new VulnerabilityFactory();
        for(String vulnerabilityName : activeVulnerability) {
            Vulnerability vulnerability = factory.getVulnerabilityInstance(vulnerabilityName);
            vulnerability.checkRules();
        }
    }

    public static void main(String[] args) {
        List<String> list = new ArrayList<>();
        list.add("bufferOverflow");
        VulnerabilityAnalyzerLauncher launcher = new VulnerabilityAnalyzerLauncher(list
                , "tempPath", "tempPath");
        launcher.launchAnalysis();
    }
}
