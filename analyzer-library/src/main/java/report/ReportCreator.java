package report;

import utils.Constants;

import java.text.SimpleDateFormat;
import java.util.*;

public class ReportCreator {

    private static final String DATE_FORMAT = "MM/dd/yyyy HH:mm:ss";
    private static final String PATH_TO_REPORT_TEMPLATE = "report-file-template.vm";
    private static final String PATH_TO_GENERAL_REPORT_TEMPLATE = "general-report-file-template.vm";

    public static void createHtmlReport(String pathToSourceFile, String pathToReportFolder
            , List<ReportInformation> reportInformationList, String fileName) {
        String pathToReportFile = pathToReportFolder + Constants.BACKSLASH
                + fileName + "_"
                + Constants.REPORT_FILE_NAME;
        boolean isAnalysisPassed = reportInformationList.size() == 0;
        VelocityHelper.saveReportToFile(PATH_TO_REPORT_TEMPLATE, pathToReportFile
                , setParametersForReport(pathToSourceFile
                , pathToReportFile, isAnalysisPassed, reportInformationList));
    }

    public static void createGeneralHtmlReport(String pathToSourceFolder, String pathToReportFolder
            , List<CppFileReportInformation> cppFilesReport) {
        boolean isAnalysisPassed = true;
        for (CppFileReportInformation cppFile : cppFilesReport) {
            if (!cppFile.getValidationPassed()) {
                isAnalysisPassed = false;
                break;
            }
        }
        VelocityHelper.saveReportToFile(PATH_TO_GENERAL_REPORT_TEMPLATE, pathToReportFolder
                , setParametersForGeneralReport(pathToSourceFolder, pathToReportFolder
                        , isAnalysisPassed, cppFilesReport));
    }

    private static Map<String, Object> setParametersForReport(String pathToSourceFile, String pathToReportFile
            , boolean isAnalysisPassed, List<ReportInformation> reportInformationList) {
        Map<String, Object> parameters = new HashMap<>();
        parameters.put(Constants.VALIDATION_DATE, new SimpleDateFormat(DATE_FORMAT, Locale.ENGLISH).format(new Date()));
        parameters.put(Constants.PATH_TO_SOURCE_FILE, pathToSourceFile);
        parameters.put(Constants.PATH_TO_REPORT_FILE, pathToReportFile);
        parameters.put(Constants.GENERAL_ANALYSIS_PASSED, isAnalysisPassed);
        parameters.put(Constants.REPORT_INFORMATION_LIST, reportInformationList);
        return parameters;
    }

    private static Map<String, Object> setParametersForGeneralReport(String pathToSourceFolder
            , String pathToReportFolder, boolean isAnalysisPassed
            , List<CppFileReportInformation> reportInformationList) {
        Map<String, Object> parameters = new HashMap<>();
        parameters.put(Constants.VALIDATION_DATE, new SimpleDateFormat(DATE_FORMAT, Locale.ENGLISH).format(new Date()));
        parameters.put(Constants.PATH_TO_SOURCE_FILE, pathToSourceFolder);
        parameters.put(Constants.PATH_TO_REPORT_FILE, pathToReportFolder);
        parameters.put(Constants.GENERAL_ANALYSIS_PASSED, isAnalysisPassed);
        parameters.put(Constants.REPORT_INFORMATION_LIST, reportInformationList);
        return parameters;
    }
}
